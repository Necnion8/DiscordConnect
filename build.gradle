plugins {
    id 'java'
    id 'com.gradleup.shadow' version '9.0.0-beta7'
    id 'eclipse'
    id "org.jetbrains.gradle.plugin.idea-ext" version "1.0.1"
}

repositories {
    mavenCentral()
    maven {
        name = 'm2-dv8tion'
        url = 'https://m2.dv8tion.net/releases'
    }
    maven {
        name = 'papermc-repo'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
}

dependencies {
    compileOnly('com.velocitypowered:velocity-api:3.4.0-SNAPSHOT')
    annotationProcessor('com.velocitypowered:velocity-api:3.4.0-SNAPSHOT')
    implementation('net.dv8tion:JDA:5.3.0') {
        exclude module: 'opus-java'
    }
    implementation('com.fasterxml.jackson.core:jackson-databind:2.18.2')
//    implementation('org.bstats:bstats-bungeecord:3.1.0')
    implementation(files('libs/MarkdownConverter-1.1-SNAPSHOT-min.jar'))
//    compileOnly(files('libs/N8ChatCaster-dummy.jar'))
    compileOnly(files('libs/LunaChat-yukieiji.jar'))
}

shadowJar {
    relocate 'org.bstats', 'work.novablog.mcplugin.discordconnect.util'
}

tasks.register('printVersion') {
    doLast {
        println version
    }
}

group = 'work.novablog.mcplugin'
version = '2.5'
archivesBaseName = 'DiscordConnect-velocity'
java.sourceCompatibility = JavaVersion.VERSION_17

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

def templateSource = file('src/main/templates')
def templateDest = layout.buildDirectory.dir('generated/sources/templates')
def generateTemplates = tasks.register('generateTemplates', Copy) { task ->
    def props = [
            'version': project.version
    ]
    task.inputs.properties props

    task.from templateSource
    task.into templateDest
    task.expand props
}

sourceSets.main.java.srcDir(generateTemplates.map { it.outputs })

rootProject.idea.project.settings.taskTriggers.afterSync generateTemplates
project.eclipse.synchronizationTasks(generateTemplates)
